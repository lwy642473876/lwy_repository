@startuml

title __HOME's Class Diagram__\n

  namespace com.example.test_2 {
    namespace ui.home {
      abstract class com.example.test_2.ui.home.BaseRecycleAdapter {
          {static} + ITEM_TYPE_FOOTER : int
          {static} + ITEM_TYPE_HEADER : int
          {static} + ITEM_TYPE_NORMAL : int
          # datas : List<T>
          # mContext : Context
          - isHasFooter : boolean
          - isHasHeader : boolean
          - mFooterView : View
          - mHeaderView : View
          + BaseRecycleAdapter()
          + addData()
          + getItemCount()
          + getItemViewType()
          {abstract} + getLayoutId()
          + getRvItemOnclickListener()
          + onBindViewHolder()
          + onCreateViewHolder()
          + refresh()
          + remove()
          + setFooterView()
          + setHeaderView()
          + setItemText()
          + setRvItemOnclickListener()
          + updata()
          {abstract} # bindData()
      }
    }
  }
  

  namespace com.example.test_2 {
    namespace ui.home {
      class com.example.test_2.ui.home.BaseRecycleAdapter.BaseViewHolder {
          - mViewMap : Map<Integer, View>
          + BaseViewHolder()
          + getView()
      }
    }
  }
  

  namespace com.example.test_2 {
    namespace ui.home {
      interface com.example.test_2.ui.home.BaseRecycleAdapter.RvItemOnclickListener {
          {abstract} + RvItemOnclick()
      }
    }
  }
  

  namespace com.example.test_2 {
    namespace ui.home {
      class com.example.test_2.ui.home.HomeFragment {
          - button : Button
          - list_view : ListView
          - search_view : SearchView
          + onActivityCreated()
          + onCreateView()
      }
    }
  }
  

  namespace com.example.test_2 {
    namespace ui.home {
      class com.example.test_2.ui.home.SeachRecordAdapter {
          + SeachRecordAdapter()
          + getLayoutId()
          # bindData()
      }
    }
  }
  

  namespace com.example.test_2 {
    namespace ui.home {
      class com.example.test_2.ui.home.SearchDemo {
          - mRecyclerView : RecyclerView
          - mbtn_serarch : QMUIRoundButton
          - met_search : EditText
          - mtv_deleteAll : TextView
          # onCreate()
          - initViews()
      }
    }
  }
  

  namespace com.example.test_2 {
    namespace ui.home {
      class com.example.test_2.ui.home.SearchResult {
          - datas : ArrayList<Data>
          - exitTime : long
          - fManager : FragmentManager
          - fl_content : FrameLayout
          - input : String
          - mContext : Context
          - pro_num : int
          - txt_title : TextView
          # onCreate()
          - bindViews()
          {static} - isHttpUrl()
          - readData()
      }
    }
  }
  

  com.example.test_2.ui.home.BaseRecycleAdapter -up-|> androidx.recyclerview.widget.RecyclerView.Adapter
  com.example.test_2.ui.home.BaseRecycleAdapter o-- com.example.test_2.ui.home.BaseRecycleAdapter.RvItemOnclickListener : mRvItemOnclickListener
  com.example.test_2.ui.home.BaseRecycleAdapter +-down- com.example.test_2.ui.home.BaseRecycleAdapter.BaseViewHolder
  com.example.test_2.ui.home.BaseRecycleAdapter +-down- com.example.test_2.ui.home.BaseRecycleAdapter.RvItemOnclickListener
  com.example.test_2.ui.home.BaseRecycleAdapter.BaseViewHolder -up-|> androidx.recyclerview.widget.RecyclerView.ViewHolder
  com.example.test_2.ui.home.HomeFragment -up-|> androidx.fragment.app.Fragment
  com.example.test_2.ui.home.SeachRecordAdapter -up-|> com.example.test_2.ui.home.BaseRecycleAdapter
  com.example.test_2.ui.home.SearchDemo -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.test_2.ui.home.SearchDemo o-- com.example.test_2.ui.home.SeachRecordAdapter : mAdapter
  com.example.test_2.ui.home.SearchDemo o-- com.example.test_2.ui.home.db.DbDao : mDbDao
  com.example.test_2.ui.home.SearchResult -up-|> androidx.fragment.app.FragmentActivity


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
